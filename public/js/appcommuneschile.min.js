(function(){
  const urlCheckout = window.location.origin + '/cart/#products#?checkout[shipping_address][city]=#City#';
  let checkoutUrl = '';
  let conf = [];
  let regs = [];
  let selectReg = '';
  let selectCommune = '';
  let buttonSubmit = '';
  let regionSelected = -1;
  let communeName = '';

  const styleCommunes = `
  .priceCommunes-container {
    border: 1px solid #CCC;
    display: inline-block;
    min-width: 300px;
    padding: 15px;
  }
  div.priceCommunes-regions, div.priceCommunes-communes {
    margin-bottom: 15px;
  }
  .priceCommunes-select {
    min-width: 100%;
  }
  .priceCommunes-options {
    display: none;
    margin-bottom: 15px;
  }
  .priceCommunes-radio-option, #optionSelected {
    display: none;
    vertical-align: middle;
  }
  .priceCommunes-button input[disabled] {
    background-color: #999999;
    opacity: 1;
  }
  `;

  const addStyle = (styles) => {
    let css = document.createElement('style'); 
    css.type = 'text/css';

    if (css.styleSheet)
      css.styleSheet.cssText = styles; 
    else
      css.appendChild(document.createTextNode(styles));

    document.getElementsByTagName("head")[0].appendChild(css);
  }

  addStyle(styleCommunes);

  const sortObjectByName = (communes) => {
    return communes.sort(function (a, b) {
      const x = spanishSortEqualizer(a.name);
      const y = spanishSortEqualizer(b.name);

      if (x > y) {
        return 1;
      }
      if (x < y) {
        return -1;
      }
      return 0;
    });
  }

  const spanishSortEqualizer = (str) => {

    let eqStr = str.toLowerCase()
    let equalizables = { 'á':'a', 'é':'e', 'í':'i', 'ó':'o', 'ú':'u', 'ñ':'nz', ' ':'' }

    eqStr = eqStr.replace( new RegExp(Object.keys(equalizables).join('|'),'g'), (match)=>equalizables[match] )

    return eqStr
  }

  const setUrl = (products) => {
    const cartContents = fetch('/cart.js')
    .then(response => response.json())
    .then(data => {
      const products = data.items;
      let productUrl = '';

      products.forEach((product, index) => {
          productUrl += `${product.variant_id}:${product.quantity}`;

          if (index + 1 < products.length) {
              productUrl += ',';
          }	
      });

      checkoutUrl = urlCheckout.replace('#products#', productUrl);
      checkoutUrl = checkoutUrl.replace('#City#', communeName);

      window.location.assign(checkoutUrl);
    });
  }

  const hideCartButton = () => {
      const el = document.querySelector('.cart__submit[type="submit"]');

      el.style.display = 'none';
  }

  const handleSubmitCheckout = (e) => {
    e.preventDefault();
    setUrl();
  }

  const getData = () => {
    const confUrl = `/apps/appdespachochile/configurations`;

    fetch(`${confUrl}`)
    .then(function(response) {
      return response.json();
    })
    .then(function(myJson) {
      if (typeof myJson.error == 'undefined') {
        conf = myJson.configurations[0].regions;
        regs = myJson.regions;

        addDataRegion();
      } else {
        console.log(myJson.error);
      }
    });
  }

  const addDataRegion = () => {
    if (regs.length > 0) {
      regs.forEach((region) => {
        selectReg.options[selectReg.options.length] = new Option(`Región de ${region.name}`, region.id);
      });
    }
  }

  const handleRegionSelect = (id) => {
    selectCommune.length = 0;
    selectCommune.options[0] = new Option(`Seleccionar comuna`, 'default', true, true);
    selectCommune.options[0].setAttribute('disabled', 'disabled');
    regionSelected = id;
    buttonSubmit.disabled = true;
    hideOptions();

    regs.forEach((region) => {
      if (region.id === id.toString()) {
        const communes = sortObjectByName(region.communes);

        communes.forEach((commune) => {
          selectCommune.options[selectCommune.options.length] = new Option(`${commune.name}`, commune.id);
        });
      }
    });
  }

  const hideOptions = () => {
      document.querySelector('.priceCommunes-options').style.display = 'none';
      document.querySelector('.priceCommunes-radio-option').style.display = 'none';
  }

  const handleCommuneSelect = (id) => {
    let message = 'No hay envíos a esta comuna';

    if (conf.length < 0) {
      setMessage(message);

      return 0;
    }

    conf.forEach((region) => {
      if (region.id === regionSelected) {
        region.communes.forEach((commune) => {
          if (commune.id === id) {
            const price = commune.options[0].price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');

            message = `${commune.options[0].description} - ${price}`;
            communeName = commune.name;

            buttonSubmit.disabled = false;

            document.querySelector('.priceCommunes-radio-option').style.display = 'inline-block';
          }
        });
      } 
    });


    setMessage(message);

    return 1;
  }

  const setMessage = (msg) => {
    let option = document.getElementById("optionSelected");

    document.querySelector('.priceCommunes-options').style.display = 'inline-block';

    option.innerHTML = msg;
    option.style.display = 'inline-block';
  }

  const loadTemplate = () => {
    let parent = document.createElement('div');
    let container = document.createElement('div');
    let regionBox = document.createElement('div');
    let regionSelect = document.createElement('select');
    let optionSelectR = document.createElement("option");
    let communeBox = document.createElement('div');
    let communeSelect = document.createElement('select');
    let optionSelectC = document.createElement("option");  

    parent.classList.add('priceCommunes--show');
    container.classList.add('priceCommunes-container');
    regionBox.classList.add('priceCommunes-regions');
    regionSelect.id = 'priceRegions';
    regionSelect.classList.add('priceCommunes-select');
    regionSelect.classList.add('priceCommunes-regions');
    optionSelectR.value = 'default';
    optionSelectR.text = 'Seleccionar región';
    optionSelectR.setAttribute('selected', 'selected');
    optionSelectR.disabled = true;
    regionSelect.add(optionSelectR);
    communeBox.classList.add('priceCommunes-communes');
    communeSelect.id = 'priceCommunes';
    communeSelect.classList.add('priceCommunes-select');
    optionSelectC.value = 'default';
    optionSelectC.text = 'Debes seleccionar región';
    optionSelectC.setAttribute('selected', 'selected');
    optionSelectC.disabled = true;
    communeSelect.add(optionSelectC);

    selectReg = regionSelect;
    selectCommune = communeSelect;

    regionBox.appendChild(regionSelect);
    container.appendChild(regionBox);
    communeBox.appendChild(communeSelect);
    container.appendChild(communeBox);
    container.appendChild(loadDeliveryOptions());
    container.appendChild(loadButtonCheckout());
    return parent.appendChild(container);
  }

  const loadDeliveryOptions = () => {
    let deliveryBox = document.createElement('div');
    let deliveryInput = document.createElement('input');
    let deliveryLabel = document.createElement('label');

    deliveryBox.classList.add('priceCommunes-options');
    deliveryInput.setAttribute('type', 'radio');
    deliveryInput.setAttribute('name', 'delivery');
    deliveryInput.setAttribute('checked', 'checked');
    deliveryLabel.id = 'optionSelected';
    deliveryLabel.setAttribute('for', 'delivery');

    deliveryBox.appendChild(deliveryInput);
    deliveryBox.appendChild(deliveryLabel);

    return deliveryBox;
  }

  const loadButtonCheckout = () => {
    let buttonBox = document.createElement('div');
    let buttonCheck = document.querySelector('.cart__submit.btn');

    buttonSubmit = buttonCheck.cloneNode(true);
    buttonSubmit.setAttribute('disabled', 'disabled');
    hideCartButton();

    buttonBox.classList.add('priceCommunes-button');
    buttonBox.appendChild(buttonSubmit);

    return buttonBox;
  }

  const init = () => {
    let pageContainer = document.querySelector('.cart__buttons-container');

    pageContainer.appendChild(loadTemplate());

    selectReg.addEventListener("change", function (e) {
      if (e.target.value != 'default') {
          handleRegionSelect(e.target.value);
      }
    });

    selectCommune.addEventListener("change", function (e) {
      if (e.target.value != 'default') {
          handleCommuneSelect(e.target.value);
      }
    });

    buttonSubmit.addEventListener("click", function (e) {
      handleSubmitCheckout(e);
    });

    getData();
  }

  function winLoad(callback) {
    if (document.readyState === 'complete') {
      callback();
    } else {
      window.addEventListener("load", callback);
    }
  }
  
  winLoad(init);
})();